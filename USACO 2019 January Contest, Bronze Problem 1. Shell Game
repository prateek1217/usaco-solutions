#include <bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define endl '\n'
#define popcount __builtin_popcount
#define poplenl   __builtin_clzl
#define poplen   __builtin_clz
#define sz(x) (int)x.size()
#define all(x) x.begin(),x.end()
#define rep(i,x,y) for (int i=x;i<y;i++)
#define lenght length
void DBG() {
	cerr << "]" << endl;
}
template<class H, class... T> void DBG(H h, T... t) {
	cerr << h;
	if(sizeof...(t))
		cerr << ", ";
	DBG(t...);
}
#ifndef ONLINE_JUDGE
#define debug(...) cerr << "LINE(" << __LINE__ << ") -> [" << #__VA_ARGS__ << "]: [", DBG(__VA_ARGS__)
#else 
#define debug(...)
#endif
template <typename T>
void debugv(vector <T> &v){ for(int i=0;i<v.size();i++)cerr<<v[i]<<" ";cerr<<endl; }
template <typename T>
void debugvv(vector <vector <T>>&v){
	for(int i=0;i<v.size();i++){
		cerr<<i<<" ==> " ;
		for(int j=0;j<v[i].size();j++)
		cerr<<v[i][j]<<" ";
		cerr<<endl;
	}
}
template <typename T>
void debugs(set <T> &s){cerr<<"size "<<s.size()<<endl; for (auto item : s) cerr<<item<<" "; cerr<<endl;}
typedef long long ll;
ll mod=1e9+7;
ll binpow(ll b, ll e){
	ll ans = 1;
	while (e !=0){
		if (e&1) ans=(ans%mod*b%mod);
		e=e>>1;
		b  = (b*b)%mod;
	}
	return ans;
}
long long inv(long long  a, long long  mod) {
     long long  g = mod, x = 0, y = 1;
     while(a != 0) {
          long long  q = g / a;
          g %= a; swap(g, a);
          x -= q * y; swap(x, y);
     } return x < 0? x + mod : x;
}

void io(string n) {
	freopen((n+".in").c_str() , "r" , stdin );
	freopen((n+".out").c_str() , "w" , stdout );
}

int main(){
     #ifdef ONLINE_JUDGE
     ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
     #endif
     io("shell");
	int n;
     cin>>n;
     vector<vector<int>>v(n,vector<int>(4));

// note : is approach se 3 test case nahi chale hai to thoda sa edge cases ke baare me soch lena 
     for(int i=0;i<n;i++)
     {
          for(int j=1;j<=3;j++)
          {
                    cin>>v[i][j];
          }
     }
     vector<int>a(4),b(4),c(4);
     a[1]=1;
     a[2]=0;
     a[3]=0;
     b[1]=0;
     b[2]=1;
     b[3]=0;
     c[1]=0;
     c[2]=0;
     c[3]=1;
     int maxi=0;
     int a1=0,a2=0,a3=0;
     for(int i=0;i<n;i++)
     {
         if(a[v[i][1]]==0 && a[v[i][2]]==0)
         {
          if(a[v[i][3]]==1)
          a1++;
         }
         else if(a[v[i][1]]==0)
         {
          swap(a[v[i][1]],a[v[i][2]]);
          if(a[v[i][1]]==1 && v[i][1]==v[i][3])
          a1++;
         }
         else
         {
          swap(a[v[i][1]],a[v[i][2]]);
          if(a[v[i][2]]==1 && v[i][2]==v[i][3])
          a1++;
         }
          
             
          
          // debug(a1);
     }
     maxi=max(maxi,a1);
          for(int i=0;i<n;i++)
     {
          if(b[v[i][1]]==0 && b[v[i][2]]==0)
         {
          if(b[v[i][3]]==1)
          a2++;
         }
         else if(b[v[i][1]]==0)
         {
          swap(b[v[i][1]],b[v[i][2]]);
          if(b[v[i][1]]==1 && v[i][1]==v[i][3])
          a2++;
         }
         else
         {
          swap(b[v[i][1]],b[v[i][2]]);
          if(b[v[i][2]]==1 && v[i][2]==v[i][3])
          a2++;
         }
     //     debug(a2);
     }
     maxi=max(maxi,a2);
          for(int i=0;i<n;i++)
     {
           if(c[v[i][1]]==0 && c[v[i][2]]==0)
         {
          if(c[v[i][3]]==1)
          a3++;
         }
         else if(c[v[i][1]]==0)
         {
          swap(c[v[i][1]],c[v[i][2]]);
          if(c[v[i][1]]==1 && v[i][1]==v[i][3])
          a3++;
         }
         else
         {
          swap(b[v[i][1]],b[v[i][2]]);
          if(c[v[i][2]]==1 && v[i][2]==v[i][3])
          a3++;
         }
     //     debug(a3);
     }
     maxi=max(a3,maxi);
     cout<<maxi;
}
